#include<stdio.h>
#include<GL/glut.h>
float v[8][3]={{-1,-1,1},{-1,1,1},{1,1,1},{1,-1,1},{-1,-1,-1},{1,-1,-1},{1,1,-1},{-1,-1,-1}};
float color[8][3]={{0,0,0},{0,0,1},{0,1,0},{0,1,1},{1,0,0},{1,0,1},{1,1,0},{1,1,1}};
int axis=2;
int theta []={0,0,0};

void polygon(int a,int b,int c,int d)
{
	glBegin(GL_POLYGON);
	glColor3fv(color[a]);
	glVertex3fv(v[a]);
	glColor3fv(color[b]);
	glVertex3fv(v[b]);
	glColor3fv(color[c]);
	glVertex3fv(v[c]);
	glColor3fv(color[d]);
	glVertex3fv(v[d]);
	glEnd();
}
void colorcube()
{
	polygon(1,2,6,5);
	polygon(4,5,6,7);
	polygon(0,1,5,4);
	polygon(0,3,2,1);
	polygon(2,3,7,6);
	polygon(0,4,7,3);
}
	void reshape(int w,int h)
{
glClearColor(1,1,0,1);
glViewport(0,0,w,h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(-2,2,-2,2,-10,10);
glMatrixMode(GL_MODELVIEW);		
	}
	void display()
	{
		glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
		glLoadIdentity();
		glRotatef(theta[0],1,0,0);
		glRotatef(theta[1],0,0,1);
		glRotatef(theta[2],0,0,1);
		colorcube();
		theta[axis]+=-100;
		if(theta[axis]>360.0)theta[axis]-=360.0;
		glutSwapBuffers();
		glFlush();
	}
		void mouse(int btn,int st,int x,int y)
{
	if(btn==GLUT_LEFT_BUTTON&&st==GLUT_DOWN)axis=0;
		if(btn==GLUT_MIDDLE_BUTTON&&st==GLUT_DOWN)axis=1;
			if(btn==GLUT_RIGHT_BUTTON&&st==GLUT_DOWN)axis=2;
}
int main()
{
	glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB|GLUT_DEPTH);
	glutCreateWindow("colorcube");
	glutInitWindowPosition(0,0);
	glutInitWindowSize(1000,1000);
	glutDisplayFunc(display);
	glutIdleFunc(display);
	glutReshapeFunc(reshape);
	glutMouseFunc(mouse);
	glEnable(GL_DEPTH_TEST);
glutMainLoop();
glEnd();
}